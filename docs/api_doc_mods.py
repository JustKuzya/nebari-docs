from copy import deepcopy
from pathlib import Path

import click


def insert_lines(source_list: list, idx: int, lines: list) -> None:
    """Inject a list of lines at a given index"""
    lines_r = deepcopy(lines)
    lines_r.reverse()
    [source_list.insert(idx, line) for line in lines_r]


def modify_autogen_api_docs(autogen_path: Path, outpath: Path) -> None:
    """Modifications to the auto-generated API docs in order to make them
    presentable.

    Args:
        autogen_path (Path): path to the autogenerated API docs (*.md)
        outpath (Path): output path for the modified docs (*.md)
    """

    with open(autogen_path) as f:
        text = f.readlines()

    header_info = [
        "---\n",
        "title: API Documentation\n",
        "description: Reference to API docs\n",
        "---\n",
        "# API Documentation\n",
        "## Table of Contents\n",
    ]

    # remove Table of contents header
    del text[0]

    # insert new header
    insert_lines(text, 0, header_info)

    # fix header flags (otherwise page nav won't work)
    for idx, line in enumerate(text):
        if line[0:7] == "# qhub.":
            text[idx] = "##" + line
        elif line == "# qhub\n":
            text[idx] = "## qhub\n"

    with open(outpath, "w") as f:
        f.writelines(text)


@click.command()
@click.option("--autogen_path", help="path to the autogenerated API docs (*.md)")
@click.option("--outpath", help="output path for the modified docs (*.md)")
def cli_modify_autogen_api_docs(autogen_path, outpath):
    modify_autogen_api_docs(autogen_path, outpath)


if __name__ == "__main__":
    modify_autogen_api_docs()
